package com.model2.mvc.service.user.test;

import java.util.List;
import java.util.Map;

import org.junit.Assert;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import com.model2.mvc.common.Search;
import com.model2.mvc.service.domain.Product;
import com.model2.mvc.service.product.ProductService;


/*
 *	FileName :  UserServiceTest.java
 * ㅇ JUnit4 (Test Framework) 과 Spring Framework 통합 Test( Unit Test)
 * ㅇ Spring 은 JUnit 4를 위한 지원 클래스를 통해 스프링 기반 통합 테스트 코드를 작성 할 수 있다.
 * ㅇ @RunWith : Meta-data 를 통한 wiring(생성,DI) 할 객체 구현체 지정
 * ㅇ @ContextConfiguration : Meta-data location 지정
 * ㅇ @Test : 테스트 실행 소스 지정
 */
@RunWith(SpringJUnit4ClassRunner.class)
//==> Meta-Data 를 다양하게 Wiring 하자...
//@ContextConfiguration(locations = { "classpath:config/context-*.xml" })
@ContextConfiguration	(locations = {	"classpath:config/context-common.xml",
																	"classpath:config/context-aspect.xml",
																	"classpath:config/context-mybatis.xml",
																	"classpath:config/context-transaction.xml" })
//@ContextConfiguration(locations = { "classpath:config/context-common.xml" })
//@ContextConfiguration(locations = { "classpath:config/commonservice.xml" })
public class ProductServiceTest {

	//==>@RunWith,@ContextConfiguration 이용 Wiring, Test 할 instance DI
	@Autowired
	@Qualifier("productServiceImpl")
	private ProductService productService;

	//@Test
	public void testAddProduct() throws Exception {

		Product prod = new Product();
		prod.setProdName("testProduct");
		prod.setProdDetail("testProduct_Detail");
		prod.setManuDate("20140602");
		prod.setPrice(10000);
		prod.setFileName("root/testProduct_fileName");
		
		productService.addProduct(prod);
		prod = productService.getProduct(10061);
		
		//==> console 확인
		System.out.println(prod);
		
		//==> API 확인
		Assert.assertEquals("testProduct", prod.getProdName());
		Assert.assertEquals("testProduct_Detail", prod.getProdDetail());
		Assert.assertEquals("20140602", prod.getManuDate());
		Assert.assertEquals(10000, prod.getPrice());
		Assert.assertEquals("root/testProduct_fileName", prod.getFileName());
	}
	
	@Test
	public void testGetProduct() throws Exception {
		
		Product prod = new Product();
		//==> 필요하다면...
//		prod.setProdName("testProduct");
//		prod.setProdDetail("testProduct_Detail");
//		prod.setManuDate("20140602");
//		prod.setPrice(10000);
//		prod.setFileName("root/testProduct_fileName");
		
		prod = productService.getProduct(10061);
		
		//==> console 확인
		System.out.println(prod);
		
		//==> API 확인
		Assert.assertEquals("testProduct", prod.getProdName());
		Assert.assertEquals("testProduct_Detail", prod.getProdDetail());
		Assert.assertEquals("20140602", prod.getManuDate());
		Assert.assertEquals(10000, prod.getPrice());
		Assert.assertEquals("root/testProduct_fileName", prod.getFileName());

		Assert.assertNotNull(productService.getProduct(10002));
		Assert.assertNotNull(productService.getProduct(10003));
	}
	
	//@Test
	 public void testUpdateProduct() throws Exception{
		 
		Product prod = productService.getProduct(10061);
		
		Assert.assertNotNull(prod);

		Assert.assertEquals("testProduct", prod.getProdName());
		Assert.assertEquals("testProduct_Detail", prod.getProdDetail());
		Assert.assertEquals("20140602", prod.getManuDate());
		Assert.assertEquals(10000, prod.getPrice());
		Assert.assertEquals("root/testProduct_fileName", prod.getFileName());

		prod.setProdName("강아지아기");
		prod.setProdDetail("당연히바뀌었지??");
		prod.setManuDate("20151212");
		prod.setPrice(55555);
		prod.setFileName("system/temp");
		System.out.println(prod);
		
		productService.updateProduct(prod);
				
		prod = productService.getProduct(10061);
		Assert.assertNotNull(prod);
		
		//==> console 확인
		System.out.println(prod);
			
		//==> API 확인
		Assert.assertEquals("강아지아기", prod.getProdName());
		Assert.assertEquals("당연히바뀌었지??", prod.getProdDetail());
		Assert.assertEquals("20151212", prod.getManuDate());
		Assert.assertEquals(55555, prod.getPrice());
		Assert.assertEquals("system/temp", prod.getFileName());
	 }
	 
	 //==>  주석을 풀고 실행하면....
	 @Test
	 public void testGetProdductListAll() throws Exception{
		 
	 	Search search = new Search();
	 	search.setCurrentPage(1);
	 	search.setPageSize(3);
	 	Map<String,Object> map = productService.getProductList(search);
	 	
	 	List<Object> list = (List<Object>)map.get("list");
	 	Assert.assertEquals(3, list.size());
	 	
		//==> console 확인
	 	//System.out.println(list);
	 	
	 	Integer totalCount = (Integer)map.get("totalCount");
	 	System.out.println(totalCount);
	 	
	 	System.out.println("=======================================");
	 	
	 	search.setCurrentPage(1);
	 	search.setPageSize(3);
	 	search.setSearchCondition("0");
	 	search.setSearchKeyword("");
	 	map = productService.getProductList(search);
	 	
	 	list = (List<Object>)map.get("list");
	 	Assert.assertEquals(3, list.size());
	 	
	 	//==> console 확인
	 	//System.out.println(list);
	 	
	 	totalCount = (Integer)map.get("totalCount");
	 	System.out.println(totalCount);
	 }
	 
	 @Test
	 public void testGetProductListByProdNo() throws Exception{
		 
	 	Search search = new Search();
	 	search.setCurrentPage(1);
	 	search.setPageSize(3);
	 	search.setSearchCondition("0");
	 	search.setSearchKeyword("10061");
	 	Map<String,Object> map = productService.getProductList(search);
	 	
	 	List<Object> list = (List<Object>)map.get("list");
	 	Assert.assertEquals(1, list.size());
	 	
		//==> console 확인
	 	//System.out.println(list);
	 	
	 	Integer totalCount = (Integer)map.get("totalCount");
	 	System.out.println(totalCount);
	 	
	 	System.out.println("=======================================");
	 	
	 	search.setSearchCondition("0");
	 	search.setSearchKeyword(""+System.currentTimeMillis());
	 	map = productService.getProductList(search);
	 	
	 	list = (List<Object>)map.get("list");
	 	Assert.assertEquals(0, list.size());
	 	
		//==> console 확인
	 	//System.out.println(list);
	 	
	 	totalCount = (Integer)map.get("totalCount");
	 	System.out.println(totalCount);
	 }
	 
	 @Test
	 public void testGetProductListByProdName() throws Exception{
		 
	 	Search search = new Search();
	 	search.setCurrentPage(1);
	 	search.setPageSize(3);
	 	search.setSearchCondition("1");
	 	search.setSearchKeyword("강아지아기");
	 	Map<String,Object> map = productService.getProductList(search);
	 	
	 	List<Object> list = (List<Object>)map.get("list");
	 	Assert.assertEquals(2, list.size());
	 	
		//==> console 확인
	 	System.out.println(list);
	 	
	 	Integer totalCount = (Integer)map.get("totalCount");
	 	System.out.println(totalCount);
	 	
	 	System.out.println("=======================================");
	 	
	 	search.setSearchCondition("1");
	 	search.setSearchKeyword(""+System.currentTimeMillis());
	 	map = productService.getProductList(search);
	 	
	 	list = (List<Object>)map.get("list");
	 	Assert.assertEquals(0, list.size());
	 	
		//==> console 확인
	 	System.out.println(list);
	 	
	 	totalCount = (Integer)map.get("totalCount");
	 	System.out.println(totalCount);
	 }	 
	 
	 @Test
	 public void testGetProductListByProdPrice() throws Exception{
		 
	 	Search search = new Search();
	 	search.setCurrentPage(1);
	 	search.setPageSize(3);
	 	search.setSearchCondition("2");
	 	search.setSearchKeyword("55555");
	 	Map<String,Object> map = productService.getProductList(search);
	 	
	 	List<Object> list = (List<Object>)map.get("list");
	 	Assert.assertEquals(2, list.size());
	 	
		//==> console 확인
	 	System.out.println(list);
	 	
	 	Integer totalCount = (Integer)map.get("totalCount");
	 	System.out.println(totalCount);
	 	
	 	System.out.println("=======================================");
	 	
	 	search.setSearchCondition("1");
	 	search.setSearchKeyword(""+System.currentTimeMillis());
	 	map = productService.getProductList(search);
	 	
	 	list = (List<Object>)map.get("list");
	 	Assert.assertEquals(0, list.size());
	 	
		//==> console 확인
	 	System.out.println(list);
	 	
	 	totalCount = (Integer)map.get("totalCount");
	 	System.out.println(totalCount);
	 }	 
}